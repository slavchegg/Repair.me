{"version":3,"sources":["./src/app/dialog-list/dialog-list.component.css","./src/app/dialog-list/dialog-list.component.html","./src/app/dialog-list/dialog-list.component.ts","./src/app/dialog/dialog.component.css","./src/app/dialog/dialog.component.html","./src/app/dialog/dialog.component.ts","./src/app/message-routing.module.ts","./src/app/message.module.ts","./src/app/message.service.ts","./src/app/message.ts"],"names":[],"mappings":"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","file":"message.module.chunk.js","sourcesContent":["module.exports = \"table {\\n  width: 100%;\\n  border-collapse: collapse;\\n}\\ntable th, table td {\\n  padding: 4px;\\n  border: Black 1px dotted;\\n}\\ntable th {\\n  font-size: 16pt;\\n  text-align: center;\\n}\\ntd.centered, td.link {\\n  text-align: center;\\n}\\ntd.link {\\n  width: 100px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog-list/dialog-list.component.css\n// module id = ./src/app/dialog-list/dialog-list.component.css\n// module chunks = message.module","module.exports = \"<h1>Диалоги</h1>\\n<table>\\n  <tr>\\n    <th>Пользователь</th>\\n    <th>Тема</th>\\n    <th></th>\\n    <th colspan=\\\"3\\\">&nbsp;</th>\\n  </tr>\\n  <tr *ngFor=\\\"let dialog of (dialogs|async)\\\" (click)=\\\"redirect(dialog.dialogId)\\\">\\n    <td>{{dialog.interlocutor}}</td>\\n    <td>{{dialog.topic}}</td>\\n    <td>{{dialog.lastMessage}} </td>\\n    <td *ngIf = 'dialog.new == true'> Новое </td>\\n  </tr>\\n</table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog-list/dialog-list.component.html\n// module id = ./src/app/dialog-list/dialog-list.component.html\n// module chunks = message.module","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MessageService} from '../message.service';\nimport {Dialog} from '../dialog';\nimport {Observable} from 'rxjs/Observable';\n\n@Component({\n  selector: 'plants-dialog-list',\n  templateUrl: './dialog-list.component.html',\n  styleUrls: ['./dialog-list.component.css']\n})\nexport class DialogListComponent implements OnInit {\n  dialogs: Observable<Dialog[]>;\n  constructor(private route: ActivatedRoute, private ms: MessageService, private router: Router) { }\n\n  ngOnInit() {\n    if (sessionStorage.getItem('role') === 'mechanic' || sessionStorage.getItem('role') === 'serviceAdmin') {\n      this.dialogs = this.ms.getMechanicDialogs();\n    }\n    if (sessionStorage.getItem('role') === 'driver') {\n      this.dialogs = this.ms.getUserDialogs();\n    }\n  }\n  redirect(id: number) {\n    this.router.navigate(['messaging/dialog', id.toString()]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog-list/dialog-list.component.ts","module.exports = \"table {\\n  width: 100%;\\n  border-collapse: collapse;\\n}\\ntable th, table td {\\n  padding: 4px;\\n  border: Black 1px dotted;\\n}\\ntable th {\\n  font-size: 16pt;\\n  text-align: center;\\n}\\ntd.centered, td.link {\\n  text-align: center;\\n}\\ntd.link {\\n  width: 100px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/dialog.component.css\n// module id = ./src/app/dialog/dialog.component.css\n// module chunks = message.module","module.exports = \"<h1>Диалог</h1>\\n<table>\\n  <tr>\\n    <th>Отправитель</th>\\n    <th>Содержимое</th>\\n    <th colspan=\\\"2\\\">&nbsp;</th>\\n  </tr>\\n  <tr *ngFor=\\\"let message of messages\\\">\\n    <td>{{message.interlocutor}}</td>\\n    <td>{{message.content}}</td>\\n  </tr>\\n</table>\\n<br>\\n<input type=\\\"text\\\" [(ngModel)]=\\\"mes.content\\\" name=\\\"content\\\">\\n<input type=\\\"button\\\" (click)=\\\"sendMessage(mes.content)\\\" value=\\\"Отправить\\\"> <br>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/dialog.component.html\n// module id = ./src/app/dialog/dialog.component.html\n// module chunks = message.module","import { Component, OnInit } from '@angular/core';\nimport {Message} from '../message';\nimport {ActivatedRoute} from '@angular/router';\nimport {MessageService} from '../message.service';\n\n@Component({\n  selector: 'plants-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n  messages: Message[];\n  mes: Message;\n  id: string;\n  constructor(private route: ActivatedRoute, private ms: MessageService) { }\n\n  ngOnInit() {\n    this.mes = new Message();\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (sessionStorage.getItem('role') === 'mechanic' || sessionStorage.getItem('role') === 'serviceAdmin') {\n      this.ms.getMessagesFromMechanicDialog(this.id).subscribe(data => {\n        this.messages = data['messages'];\n      });\n    }\n    if (sessionStorage.getItem('role') === 'driver') {\n      this.ms.getMessagesFromUserDialog(this.id).subscribe(data => {\n        this.messages = data['messages'];\n      });\n    }\n  }\n\n  sendMessage(content: string) {\n    if (sessionStorage.getItem('role') === 'mechanic' || sessionStorage.getItem('role') === 'serviceAdmin') {\n      this.ms.sendMechanicMessage(this.id, content).subscribe();\n    }\n    if (sessionStorage.getItem('role') === 'driver') {\n      this.ms.sendUserMessage(this.id, content).subscribe();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog/dialog.component.ts","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {DialogComponent} from './dialog/dialog.component';\nimport {RegisteredGuard} from './registered.guard';\nimport {DialogListComponent} from './dialog-list/dialog-list.component';\n\nconst appRoutes: Routes = [\n  { path: '', children: [\n      { path: 'dialog/:id', component: DialogComponent, canActivate: [RegisteredGuard] },\n      { path: 'dialogs', component: DialogListComponent, canActivate: [RegisteredGuard] },\n    ]}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(appRoutes)],\n    exports: [RouterModule],\n    providers: [RegisteredGuard]\n})\nexport class MessageRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog/dialog.component';\nimport {DialogListComponent} from './dialog-list/dialog-list.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport {MessageService} from './message.service';\nimport {MessageRoutingModule} from './message-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MessageRoutingModule,\n    FormsModule,\n    HttpModule\n  ],\n  declarations: [DialogComponent, DialogListComponent],\n  providers: [MessageService]\n})\nexport class MessageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message.module.ts","import { Injectable } from '@angular/core';\nimport {Http, RequestOptions, Response, URLSearchParams} from \"@angular/http\";\nimport {Observable} from \"rxjs/Observable\";\nimport {Message} from './message';\nimport {Dialog} from \"./dialog\";\n\n@Injectable()\nexport class MessageService {\n\n  constructor(private http: Http) { }\n\n  getMessagesFromMechanicDialog(id: string): Observable<Message[]> {\n    const params = new URLSearchParams();\n    params.set('dialogId', id);\n    const options = new RequestOptions({ params: params });\n    return this.http.get('http://localhost:8080/mechanic/readMessages', options).map((r: Response) => r.json())\n      .catch((err, caught) => Observable.of([]));\n  }\n\n  getMessagesFromUserDialog(id: string): Observable<Message[]> {\n    const params = new URLSearchParams();\n    params.set('dialogId', id);\n    const options = new RequestOptions({ params: params });\n    return this.http.get('http://localhost:8080/user/readUserMessages', options).map((r: Response) => r.json())\n      .catch((err, caught) => Observable.of([]));\n  }\n\n  getMechanicDialogs(): Observable<Dialog[]> {\n    return this.http.get('http://localhost:8080/mechanic/readDialogs').map((r: Response) => r.json())\n      .catch((err, caught) => Observable.of([]));\n  }\n\n  getUserDialogs(): Observable<Dialog[]> {\n    return this.http.get('http://localhost:8080/user/readUserDialogs').map((r: Response) => r.json())\n      .catch((err, caught) => Observable.of([]));\n  }\n\n  sendMechanicMessage(id: string, content: string): any {\n    const body = new URLSearchParams();\n    body.set('dialogId', id);\n    body.set('content', content);\n    return this.http.post('http://localhost:8080/mechanic/writeMessage', body).map((r: Response) => r.json());\n  }\n\n  sendUserMessage(id: string, content: string): any {\n    const body = new URLSearchParams();\n    body.set('dialogId', id);\n    body.set('content', content);\n    return this.http.post('http://localhost:8080/user/writeMessage', body).map((r: Response) => r.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message.service.ts","export class Message {\n  dialogId: string;\n  content: string;\n  interlocutor: string;\n  date: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message.ts"],"sourceRoot":"webpack:///"}